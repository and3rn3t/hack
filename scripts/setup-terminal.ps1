# Terminal Quick Setup Script for Windows
# Run this before playing The Hack: Ghost Protocol
# Usage: pwsh scripts/setup-terminal.ps1

param(
    [switch]$Install,
    [switch]$Configure,
    [switch]$Verify
)

function Write-Banner {
    Clear-Host
    Write-Host "╔═══════════════════════════════════════════════════════════════╗" -ForegroundColor Red
    Write-Host "║                                                               ║" -ForegroundColor Red
    Write-Host "║        THE HACK: GHOST PROTOCOL - TERMINAL SETUP              ║" -ForegroundColor Red
    Write-Host "║                                                               ║" -ForegroundColor Red
    Write-Host "╚═══════════════════════════════════════════════════════════════╝" -ForegroundColor Red
    Write-Host ""
}

function Install-Requirements {
    Write-Host "Installing required components..." -ForegroundColor Cyan
    Write-Host ""
    
    # Check for winget
    if (Get-Command winget -ErrorAction SilentlyContinue) {
        Write-Host "✓ winget found" -ForegroundColor Green
        
        # Install Windows Terminal
        Write-Host "`nInstalling Windows Terminal..." -ForegroundColor Yellow
        try {
            winget install Microsoft.WindowsTerminal --silent
            Write-Host "✓ Windows Terminal installed" -ForegroundColor Green
        } catch {
            Write-Host "✗ Failed to install Windows Terminal" -ForegroundColor Red
        }
        
        # Install PowerShell 7
        Write-Host "`nInstalling PowerShell 7..." -ForegroundColor Yellow
        try {
            winget install Microsoft.PowerShell --silent
            Write-Host "✓ PowerShell 7 installed" -ForegroundColor Green
        } catch {
            Write-Host "✗ Failed to install PowerShell 7" -ForegroundColor Red
        }
        
        # Install Cascadia Code font
        Write-Host "`nInstalling Cascadia Code font..." -ForegroundColor Yellow
        try {
            winget install Microsoft.CascadiaCode --silent
            Write-Host "✓ Cascadia Code font installed" -ForegroundColor Green
        } catch {
            Write-Host "✗ Failed to install font" -ForegroundColor Red
        }
    } else {
        Write-Host "✗ winget not found" -ForegroundColor Red
        Write-Host "  Please install from Microsoft Store or Windows Settings" -ForegroundColor Yellow
    }
}

function Configure-Terminal {
    Write-Host "Configuring terminal settings..." -ForegroundColor Cyan
    Write-Host ""
    
    # Set UTF-8 encoding
    Write-Host "Setting UTF-8 encoding..." -ForegroundColor Yellow
    [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
    [Console]::InputEncoding = [System.Text.Encoding]::UTF8
    Write-Host "✓ UTF-8 encoding set for current session" -ForegroundColor Green
    
    # Create/update PowerShell profile
    if (-not (Test-Path $PROFILE)) {
        Write-Host "`nCreating PowerShell profile..." -ForegroundColor Yellow
        New-Item -Path $PROFILE -ItemType File -Force | Out-Null
    }
    
    $profileContent = @"
# The Hack: Ghost Protocol - Terminal Configuration
# Auto-generated by setup-terminal.ps1

# Set UTF-8 encoding
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
[Console]::InputEncoding = [System.Text.Encoding]::UTF8

# Set terminal title
`$Host.UI.RawUI.WindowTitle = "PowerShell"

# Alias for the game
function hack {
    Set-Location (Join-Path `$PSScriptRoot "..")
    cargo run
}

# Quick terminal verification
function Verify-HackTerminal {
    & (Join-Path `$PSScriptRoot "scripts\verify-terminal.ps1")
}

Write-Host "Terminal configured for The Hack: Ghost Protocol" -ForegroundColor Green
Write-Host "Type 'hack' to play the game" -ForegroundColor Cyan
"@
    
    Add-Content -Path $PROFILE -Value "`n$profileContent"
    Write-Host "✓ PowerShell profile updated" -ForegroundColor Green
    Write-Host "  Profile location: $PROFILE" -ForegroundColor Gray
    
    # Set terminal size
    try {
        $pswindow = $Host.UI.RawUI
        $newsize = $pswindow.WindowSize
        $newsize.Width = 100
        $newsize.Height = 30
        $pswindow.WindowSize = $newsize
        Write-Host "`n✓ Terminal size set to 100x30" -ForegroundColor Green
    } catch {
        Write-Host "`n⚠ Could not resize terminal automatically" -ForegroundColor Yellow
        Write-Host "  Please resize manually to at least 80x24" -ForegroundColor Yellow
    }
}

function Verify-Setup {
    Write-Host "Verifying terminal configuration..." -ForegroundColor Cyan
    Write-Host ""
    
    # Run verification script
    $verifyScript = Join-Path $PSScriptRoot "verify-terminal.ps1"
    if (Test-Path $verifyScript) {
        & $verifyScript
    } else {
        Write-Host "✗ Verification script not found" -ForegroundColor Red
    }
}

# Main execution
Write-Banner

if ($Install) {
    Install-Requirements
} elseif ($Configure) {
    Configure-Terminal
} elseif ($Verify) {
    Verify-Setup
} else {
    # Interactive mode
    Write-Host "Welcome to The Hack: Ghost Protocol Terminal Setup!" -ForegroundColor Green
    Write-Host ""
    Write-Host "This script will help you configure your terminal for the best experience." -ForegroundColor White
    Write-Host ""
    Write-Host "What would you like to do?" -ForegroundColor Yellow
    Write-Host "  [1] Install required components (Windows Terminal, PowerShell 7, Fonts)" -ForegroundColor Cyan
    Write-Host "  [2] Configure terminal settings" -ForegroundColor Cyan
    Write-Host "  [3] Verify terminal configuration" -ForegroundColor Cyan
    Write-Host "  [4] Do everything (recommended for first-time setup)" -ForegroundColor Cyan
    Write-Host "  [5] Exit" -ForegroundColor Cyan
    Write-Host ""
    
    $choice = Read-Host "Enter your choice (1-5)"
    
    switch ($choice) {
        "1" {
            Write-Host ""
            Install-Requirements
        }
        "2" {
            Write-Host ""
            Configure-Terminal
        }
        "3" {
            Write-Host ""
            Verify-Setup
        }
        "4" {
            Write-Host ""
            Install-Requirements
            Write-Host ""
            Start-Sleep -Seconds 2
            Configure-Terminal
            Write-Host ""
            Start-Sleep -Seconds 2
            Verify-Setup
        }
        "5" {
            Write-Host ""
            Write-Host "Setup cancelled." -ForegroundColor Yellow
            exit
        }
        default {
            Write-Host ""
            Write-Host "Invalid choice. Exiting." -ForegroundColor Red
            exit
        }
    }
}

Write-Host ""
Write-Host "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" -ForegroundColor DarkGray
Write-Host ""
Write-Host "Setup complete! Next steps:" -ForegroundColor Green
Write-Host "  1. Restart PowerShell to apply profile changes" -ForegroundColor White
Write-Host "  2. Run: " -NoNewline -ForegroundColor White
Write-Host "cargo run" -ForegroundColor Cyan -NoNewline
Write-Host " to start the game" -ForegroundColor White
Write-Host "  3. For help, see: " -NoNewline -ForegroundColor White
Write-Host "docs/TERMINAL_SETUP.md" -ForegroundColor Cyan
Write-Host ""
Write-Host "Happy hacking! 👻🔒" -ForegroundColor Red
